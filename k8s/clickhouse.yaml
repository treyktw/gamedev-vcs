apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse-data
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: bulk-hdd  # Use bulk storage for analytics data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse-logs
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: analytics
    app.kubernetes.io/part-of: gamedev-vcs
spec:
  serviceName: clickhouse
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/component: analytics
    spec:
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:23.12
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: native
        volumeMounts:
        - name: clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: clickhouse-logs
          mountPath: /var/log/clickhouse-server
        - name: clickhouse-config
          mountPath: /etc/clickhouse-server/config.xml
          subPath: clickhouse-config.xml
        env:
        - name: CLICKHOUSE_DB
          value: "vcs_analytics"
        - name: CLICKHOUSE_USER
          value: "vcs_user"
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vcs-secrets
              key: clickhouse-password
        - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
          value: "1"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          capabilities:
            drop:
            - ALL
        # ClickHouse needs specific ulimits
        # This is handled via init container or pod security policy
      initContainers:
      - name: setup-ulimits
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          echo "Setting up file limits for ClickHouse..."
          # This is a placeholder - actual ulimit setup depends on your cluster config
          echo "ulimit -n 262144" > /tmp/setup-complete
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - SYS_RESOURCE
      volumes:
      - name: clickhouse-data
        persistentVolumeClaim:
          claimName: clickhouse-data
      - name: clickhouse-logs
        persistentVolumeClaim:
          claimName: clickhouse-logs
      - name: clickhouse-config
        configMap:
          name: vcs-config
          items:
          - key: clickhouse-config.xml
            path: clickhouse-config.xml
      securityContext:
        fsGroup: 101
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - clickhouse
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: analytics
spec:
  selector:
    app.kubernetes.io/name: clickhouse
  ports:
  - port: 8123
    targetPort: 8123
    name: http
  - port: 9000
    targetPort: 9000
    name: native
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-headless
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: analytics
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: clickhouse
  ports:
  - port: 8123
    targetPort: 8123
    name: http
  - port: 9000
    targetPort: 9000
    name: native