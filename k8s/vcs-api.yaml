apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vcs-storage
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: vcs-api
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany  # Multiple pods need access
  resources:
    requests:
      storage: 500Gi
  storageClassName: bulk-hdd  # Large storage for game assets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vcs-api
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: vcs-api
    app.kubernetes.io/component: api-server
    app.kubernetes.io/part-of: gamedev-vcs
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3  # High availability
  selector:
    matchLabels:
      app.kubernetes.io/name: vcs-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vcs-api
        app.kubernetes.io/component: api-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: vcs-api
        image: yourstudio/vcs-server:1.0.0  # Replace with your registry
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: vcs-storage
          mountPath: /app/storage
        - name: vcs-config
          mountPath: /app/config
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8080"
        - name: STORAGE_PATH
          value: "/app/storage"
        - name: REDIS_URL
          value: "redis://redis:6379/0"
        - name: CLICKHOUSE_URL
          value: "http://clickhouse:8123"
        - name: CLICKHOUSE_DATABASE
          value: "vcs_analytics"
        - name: CLICKHOUSE_USERNAME
          value: "vcs_user"
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vcs-secrets
              key: clickhouse-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: vcs-secrets
              key: jwt-secret
        - name: GIN_MODE
          value: "release"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi" 
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: vcs-storage
        persistentVolumeClaim:
          claimName: vcs-storage
      - name: vcs-config
        configMap:
          name: vcs-config
      securityContext:
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - vcs-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: vcs-api
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: vcs-api
    app.kubernetes.io/component: api-server
spec:
  selector:
    app.kubernetes.io/name: vcs-api
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vcs-api-hpa
  namespace: vcs-system
  labels:
    app.kubernetes.io/name: vcs-api
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vcs-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60